variables:
- group: "production"

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - app

pool:
  vmImage: ubuntu-latest

jobs:
- job: CI
  steps:
  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: 'ci'
      workingDir: 'app'
  - task: DownloadSecureFile@1
    name: dotEnvProduction
    displayName: 'Download .env.production'
    inputs:
      secureFile: '.env.production'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo Installing $(dotEnvProduction.secureFilePath) to build directory
        cp $(dotEnvProduction.secureFilePath) $(Build.Repository.LocalPath)/app/.env.production
  - task: Npm@1
    displayName: 'npm build'
    inputs:
      command: 'custom'
      workingDir: 'app'
      customCommand: 'run build'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'app/dist'
      publishLocation: 'pipeline'
      artifact: 'app'

- deployment: CD
  dependsOn: CI
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  environment: 'Azure'
  strategy:
    runOnce:
      deploy:
        steps:
        - task: AzureCLI@2
          displayName: 'upload files to Azure'
          inputs:
            azureSubscription: '$(azureSubscription)'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az storage blob delete-batch --account-key $(storageAccountKey) --account-name $(storageAccountName) --source `$web --delete-snapshots include
              az storage blob upload-batch --account-key $(storageAccountKey) --account-name $(storageAccountName) --destination `$web --source $(Pipeline.Workspace)/app